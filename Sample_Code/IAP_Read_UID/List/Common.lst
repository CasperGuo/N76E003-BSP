C51 COMPILER V9.52.0.0   COMMON                                                            11/18/2016 14:13:38 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE COMMON
OBJECT MODULE PLACED IN .\Output\Common.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE ..\..\Common\Common.c BROWSE INCDIR(..\..\Common;..\..\Include) DEFINE(FOSC
                    -_160000) DEBUG OBJECTEXTEND PRINT(.\List\Common.lst) TABS(2) OBJECT(.\Output\Common.obj)

line level    source

   1          /*--------------------------------------------------------------------------------------------------------
             --*/
   2          /*                                                                                                        
             - */
   3          /* Copyright(c) 2016 Nuvoton Technology Corp. All rights reserved.                                        
             - */
   4          /*                                                                                                        
             - */
   5          /*--------------------------------------------------------------------------------------------------------
             --*/
   6          
   7          //********************************************************************************************************
             -***
   8          //  Nuvoton Technoledge Corp. 
   9          //  Website: http://www.nuvoton.com
  10          //  E-Mail : MicroC-8bit@nuvoton.com
  11          //  Date   : Apr/21/2016
  12          //********************************************************************************************************
             -***
  13          
  14          #include "N76E003.h"
  15          #include "Common.h"
  16          #include "Delay.h"
  17          #include "SFR_Macro.h"
  18          #include "Function_define.h"
  19          
  20          //----------------------------------------------------------------------------------
  21          // UART0 baud rate initial setting 
  22          //----------------------------------------------------------------------------------
  23          void InitialUART0_Timer1(UINT32 u32Baudrate)    //T1M = 1, SMOD = 1
  24          {
  25   1          P06_Quasi_Mode;   //Setting UART pin as Quasi mode for transmit
  26   1          P07_Quasi_Mode;   //Setting UART pin as Quasi mode for transmit
  27   1        
  28   1          SCON = 0x52;      //UART0 Mode1,REN=1,TI=1
  29   1          TMOD |= 0x20;     //Timer1 Mode1
  30   1          
  31   1          set_SMOD;         //UART0 Double Rate Enable
  32   1          set_T1M;
  33   1          clr_BRCK;         //Serial port 0 baud rate clock source = Timer1
  34   1       
  35   1      #ifdef FOSC_160000
  36   1          TH1 = 256 - (1000000/u32Baudrate+1);               /*16 MHz */
  37   1      #endif      
  38   1      #ifdef FOSC_166000
                  TH1 = 256 - (1037500/u32Baudrate);                 /*16.6 MHz */
              #endif
  41   1          set_TR1;
  42   1      }
  43          //---------------------------------------------------------------
  44          void InitialUART0_Timer3(UINT32 u32Baudrate) //use timer3 as Baudrate generator
  45          {
  46   1          P06_Quasi_Mode;   //Setting UART pin as Quasi mode for transmit
  47   1          P07_Quasi_Mode;   //Setting UART pin as Quasi mode for transmit 
C51 COMPILER V9.52.0.0   COMMON                                                            11/18/2016 14:13:38 PAGE 2   

  48   1        
  49   1          SCON = 0x52;     //UART0 Mode1,REN=1,TI=1
  50   1          set_SMOD;        //UART0 Double Rate Enable
  51   1          T3CON &= 0xF8;   //T3PS2=0,T3PS1=0,T3PS0=0(Prescale=1)
  52   1          set_BRCK;        //UART0 baud rate clock source = Timer3
  53   1      
  54   1      #ifdef FOSC_160000
  55   1          RH3    = HIBYTE(65536 - (1000000/u32Baudrate)-1);     /*16 MHz */
  56   1          RL3    = LOBYTE(65536 - (1000000/u32Baudrate)-1);     /*16 MHz */
  57   1      #endif
  58   1      #ifdef FOSC_166000
                  RH3    = HIBYTE(65536 - (1037500/u32Baudrate));       /*16.6 MHz */
                  RL3    = LOBYTE(65536 - (1037500/u32Baudrate));       /*16.6 MHz */
              #endif
  62   1          set_TR3;         //Trigger Timer3
  63   1      }
  64          
  65          UINT8 Receive_Data_From_UART0(void)
  66          {
  67   1          UINT8 c;
  68   1          while (!RI);
  69   1          c = SBUF;
  70   1          RI = 0;
  71   1          return (c);
  72   1      }
  73          
  74          void Send_Data_To_UART0 (UINT8 c)
  75          {
  76   1          TI = 0;
  77   1          SBUF = c;
  78   1          while(TI==0);
  79   1      }
  80          
  81          
  82          //----------------------------------------------------------------------------------
  83          // UART1 baud rate initial setting 
  84          //----------------------------------------------------------------------------------
  85          void InitialUART1_Timer3(UINT32 u32Baudrate) //use timer3 as Baudrate generator
  86          {
  87   1          P02_Quasi_Mode;   //Setting UART pin as Quasi mode for transmit
  88   1          P16_Quasi_Mode;   //Setting UART pin as Quasi mode for transmit
  89   1        
  90   1          SCON_1 = 0x52;   //UART1 Mode1,REN_1=1,TI_1=1
  91   1          T3CON &= 0xF8;   //T3PS2=0,T3PS1=0,T3PS0=0(Prescale=1)
  92   1        
  93   1      #ifdef FOSC_160000
  94   1          RH3    = HIBYTE(65536 - (1000000/u32Baudrate)-1);     /*16 MHz */
  95   1          RL3    = LOBYTE(65536 - (1000000/u32Baudrate)-1);     /*16 MHz */
  96   1      #endif
  97   1      #ifdef FOSC_166000
                  RH3    = HIBYTE(65536 - (1037500/u32Baudrate));       /*16.6 MHz */
                  RL3    = LOBYTE(65536 - (1037500/u32Baudrate));       /*16.6 MHz */
              #endif
 101   1          set_TR3;         //Trigger Timer3
 102   1      }
 103          
 104          UINT8 Receive_Data_From_UART1(void)
 105          {
 106   1          UINT8 c;
 107   1          
 108   1          while (!RI_1);
 109   1          c = SBUF_1;
C51 COMPILER V9.52.0.0   COMMON                                                            11/18/2016 14:13:38 PAGE 3   

 110   1          RI_1 = 0;
 111   1          return (c);
 112   1      }
 113          
 114          void Send_Data_To_UART1 (UINT8 c)
 115          {
 116   1          TI_1 = 0;
 117   1          SBUF_1 = c;
 118   1          while(TI_1==0);
 119   1      }
 120          
 121          
 122          /*==========================================================================*/
 123          #ifdef SW_Reset
              void SW_Reset(void)
              {
                  TA = 0xAA;
                  TA = 0x55;
                  set_SWRST;
              }
              #endif
 131          /*==========================================================================*/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    287    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       8
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
